@startumlhide empty memberspackage web {  +class WebUtils <<common>> {    +getLanguageHeader()    +getAuthenticatedUser()    +{static}buildAccessTokenResponseCookie()  }  class AuthorizationController <<user>> {    initiateAuthorization()    verifyAuthorization()  }}package primary-port {  interface AuthorizationApi <<user>> {    getRequestToken()    getAuthenticatedUser()  }  +interface UserApi <<user>> {    +findAuthenticatedUser()  }}package core {  class AuthorizationService <<user>>    class UserService <<user>>}package secondary-port {  interface OAuthService <<user>> {    getRequestToken()    getAccessToken()  }  interface WikipediaUserRepository <<user>> {    findAuthenticatedUser()  }}package secondary-adapters {  package wikipedia {    class OAuthMediaWikiService <<user>>    class WikipediaUserApiRepository <<user>>    class WikipediaUserCacheRepository <<user>>  }}AuthorizationController --> AuthorizationApiAuthorizationApi <|-- AuthorizationServiceWebUtils --> UserApiUserApi <-- AuthorizationServiceAuthorizationService --> OAuthServiceUserApi <|-- UserServiceUserService --> WikipediaUserRepositoryOAuthService <|-- OAuthMediaWikiServiceWikipediaUserRepository <|-- WikipediaUserCacheRepositoryWikipediaUserCacheRepository <-- WikipediaUserApiRepository@enduml